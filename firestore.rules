rules_version = '2'

service cloud.firestore {
	match /databases/{database}/documents {
		match /opensource/{url} {
			allow read, write
		}
		match /users/{uid} {
			allow read: if signedIn()
			allow write: if signedInWith(uid)
			match /name {
				allow read
				allow create, update: if signedInWith(uid) && isValidString(newData())
				allow delete: if false
			}
			match /email {
				allow read: if signedIn()
				allow create, update: if signedInWith(uid) && isEmailUnique(newData())
				allow delete: if false
			}
			match /balance {
				allow read
				allow create: if signedInWith(uid) && (newData() is int) && newData() == 0
				allow update, delete: if false
			}
			match /reputation {
				allow read
				allow create: if signedInWith(uid) && (newData() is int) && newData() == 0
				allow update, delete: if false
			}
			match /reputationHistory/{reputationHistoryId} {
				allow read: if signedInWith(uid)
			}
		}

		function authId() {
			return request.auth.uid
		}

		function signedIn() {
			return request.auth != null
		}

		function signedInWith(uid) {
			return signedIn() && authId() == uid
		}

		function oldData() {
			return resource.data
		}

		function newData() {
			return request.resource.data
		}

		function isValidString(data) {
			return (data is string) && data != ''
		}
	}
}